/*
 * PEIDEMO
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AirEmission', 'model/AirEmissionUnit', 'model/AtmosphereEmission', 'model/Config', 'model/Ekpi', 'model/EkpiSimItem', 'model/IHConfig', 'model/JsonNode', 'model/LoadMCR', 'model/OTConfig', 'model/Ship', 'model/Simulation', 'model/SimulationInput', 'model/SimulationInputItem', 'model/SimulationOutput', 'model/SimulationOutputItem', 'model/Subindex', 'model/SubindexSimItem', 'model/Waste', 'model/WasteWaterEmission', 'api/AirEmissionResourceApi', 'api/ConfigResourceApi', 'api/EkpiResourceApi', 'api/LoadMCRResourceApi', 'api/ShipResourceApi', 'api/SimulationResourceApi', 'api/SubindexResourceApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AirEmission'), require('./model/AirEmissionUnit'), require('./model/AtmosphereEmission'), require('./model/Config'), require('./model/Ekpi'), require('./model/EkpiSimItem'), require('./model/IHConfig'), require('./model/JsonNode'), require('./model/LoadMCR'), require('./model/OTConfig'), require('./model/Ship'), require('./model/Simulation'), require('./model/SimulationInput'), require('./model/SimulationInputItem'), require('./model/SimulationOutput'), require('./model/SimulationOutputItem'), require('./model/Subindex'), require('./model/SubindexSimItem'), require('./model/Waste'), require('./model/WasteWaterEmission'), require('./api/AirEmissionResourceApi'), require('./api/ConfigResourceApi'), require('./api/EkpiResourceApi'), require('./api/LoadMCRResourceApi'), require('./api/ShipResourceApi'), require('./api/SimulationResourceApi'), require('./api/SubindexResourceApi'));
  }
}(function(ApiClient, AirEmission, AirEmissionUnit, AtmosphereEmission, Config, Ekpi, EkpiSimItem, IHConfig, JsonNode, LoadMCR, OTConfig, Ship, Simulation, SimulationInput, SimulationInputItem, SimulationOutput, SimulationOutputItem, Subindex, SubindexSimItem, Waste, WasteWaterEmission, AirEmissionResourceApi, ConfigResourceApi, EkpiResourceApi, LoadMCRResourceApi, ShipResourceApi, SimulationResourceApi, SubindexResourceApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Peidemo = require('index'); // See note below*.
   * var xxxSvc = new Peidemo.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Peidemo.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Peidemo.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Peidemo.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AirEmission model constructor.
     * @property {module:model/AirEmission}
     */
    AirEmission: AirEmission,
    /**
     * The AirEmissionUnit model constructor.
     * @property {module:model/AirEmissionUnit}
     */
    AirEmissionUnit: AirEmissionUnit,
    /**
     * The AtmosphereEmission model constructor.
     * @property {module:model/AtmosphereEmission}
     */
    AtmosphereEmission: AtmosphereEmission,
    /**
     * The Config model constructor.
     * @property {module:model/Config}
     */
    Config: Config,
    /**
     * The Ekpi model constructor.
     * @property {module:model/Ekpi}
     */
    Ekpi: Ekpi,
    /**
     * The EkpiSimItem model constructor.
     * @property {module:model/EkpiSimItem}
     */
    EkpiSimItem: EkpiSimItem,
    /**
     * The IHConfig model constructor.
     * @property {module:model/IHConfig}
     */
    IHConfig: IHConfig,
    /**
     * The JsonNode model constructor.
     * @property {module:model/JsonNode}
     */
    JsonNode: JsonNode,
    /**
     * The LoadMCR model constructor.
     * @property {module:model/LoadMCR}
     */
    LoadMCR: LoadMCR,
    /**
     * The OTConfig model constructor.
     * @property {module:model/OTConfig}
     */
    OTConfig: OTConfig,
    /**
     * The Ship model constructor.
     * @property {module:model/Ship}
     */
    Ship: Ship,
    /**
     * The Simulation model constructor.
     * @property {module:model/Simulation}
     */
    Simulation: Simulation,
    /**
     * The SimulationInput model constructor.
     * @property {module:model/SimulationInput}
     */
    SimulationInput: SimulationInput,
    /**
     * The SimulationInputItem model constructor.
     * @property {module:model/SimulationInputItem}
     */
    SimulationInputItem: SimulationInputItem,
    /**
     * The SimulationOutput model constructor.
     * @property {module:model/SimulationOutput}
     */
    SimulationOutput: SimulationOutput,
    /**
     * The SimulationOutputItem model constructor.
     * @property {module:model/SimulationOutputItem}
     */
    SimulationOutputItem: SimulationOutputItem,
    /**
     * The Subindex model constructor.
     * @property {module:model/Subindex}
     */
    Subindex: Subindex,
    /**
     * The SubindexSimItem model constructor.
     * @property {module:model/SubindexSimItem}
     */
    SubindexSimItem: SubindexSimItem,
    /**
     * The Waste model constructor.
     * @property {module:model/Waste}
     */
    Waste: Waste,
    /**
     * The WasteWaterEmission model constructor.
     * @property {module:model/WasteWaterEmission}
     */
    WasteWaterEmission: WasteWaterEmission,
    /**
     * The AirEmissionResourceApi service constructor.
     * @property {module:api/AirEmissionResourceApi}
     */
    AirEmissionResourceApi: AirEmissionResourceApi,
    /**
     * The ConfigResourceApi service constructor.
     * @property {module:api/ConfigResourceApi}
     */
    ConfigResourceApi: ConfigResourceApi,
    /**
     * The EkpiResourceApi service constructor.
     * @property {module:api/EkpiResourceApi}
     */
    EkpiResourceApi: EkpiResourceApi,
    /**
     * The LoadMCRResourceApi service constructor.
     * @property {module:api/LoadMCRResourceApi}
     */
    LoadMCRResourceApi: LoadMCRResourceApi,
    /**
     * The ShipResourceApi service constructor.
     * @property {module:api/ShipResourceApi}
     */
    ShipResourceApi: ShipResourceApi,
    /**
     * The SimulationResourceApi service constructor.
     * @property {module:api/SimulationResourceApi}
     */
    SimulationResourceApi: SimulationResourceApi,
    /**
     * The SubindexResourceApi service constructor.
     * @property {module:api/SubindexResourceApi}
     */
    SubindexResourceApi: SubindexResourceApi
  };

  return exports;
}));
